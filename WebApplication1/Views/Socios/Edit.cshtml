@model WebApplication1.Controllers.Socio

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "Socios", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Socio</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id_Socio)

    <div class="form-group">
        @Html.LabelFor(model => model.Foto, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*@Html.EditorFor(model => model.Foto, new { htmlAttributes = new { @class = "form-control" } })*@
            <img width="150" src="@Url.Action("getImage","Socios",new { id = Model.Id_Socio})" />
            <input type="file" name="image" />
            @Html.ValidationMessageFor(model => model.Foto, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Apellidos, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Apellidos, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Apellidos, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.cedula, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.cedula, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.cedula, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Direccion, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Direccion, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Direccion, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Sexo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Sexo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Sexo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Telefono, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Telefono, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Telefono, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Edad, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Edad, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Edad, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Fecha_Nacimiento, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Fecha_Nacimiento, new { htmlAttributes = new { autocomplete = "off", @id = "txtdate", @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Fecha_Nacimiento, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Lugar_De_Trabajo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Lugar_De_Trabajo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Lugar_De_Trabajo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Direccion_Trabajo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Direccion_Trabajo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Direccion_Trabajo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Telefono_Oficina, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Telefono_Oficina, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Telefono_Oficina, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Tipo_Membresia, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Tipo_Membresia, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Tipo_Membresia, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Fecha_Inicial, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Fecha_Inicial, new { htmlAttributes = new { autocomplete = "off", @id = "txtdate3", @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Fecha_Inicial, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Fecha_Final, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Fecha_Final, new { htmlAttributes = new { autocomplete = "off", @id = "txtdate2", @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Fecha_Final, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Estado, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Estado, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <label>Lista de Afiliados:</label>
        <input id="afName" class="form-control" type="text" placeholder="Nombre Afiliado" />
        <input id="afApellido" class="form-control" type="text" placeholder="Apellido Afiliado" />
        <input id="afParentesto" class="form-control" type="text" placeholder="Parentesco Afiliado" />
        <button class="btn btn-primary" id="btnAgregarAfiliado">Agregar</button>
        <ul id="listAfiliados">
            @for (int i = 0; i < Model.Afiliadoes.Count; i++)
            {
                var af = Model.Afiliadoes.ToArray()[i];
                <li>
                    <span>@af.Nombre_Afiliado : @af.Parentesco</span>
                    <input type="hidden" name="ListAfiliados[@i].Id_Afiliado" value="@af.Id_Afiliado" />
                    <input type="hidden" name="ListAfiliados[@i].Nombre_Afiliado" value="@af.Nombre_Afiliado" />
                    <input type="hidden" name="ListAfiliados[@i].Apellidos_Afiliado" value="@af.Apellidos_Afiliado" />
                    <input type="hidden" name="ListAfiliados[@i].Id_Socio" value="@Model.Id_Socio" />
                    <input type="hidden" name="ListAfiliados[@i].Parentesco" value="@af.Parentesco" />
                </li>
            }
        </ul>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script>
    $("#btnAgregarAfiliado").click(function (e) {
        e.preventDefault();
        AgregarNuevoAfiliado();
        Clear();
    });
    function GetAfiliado() {
        return {
            idAfiliado: 0,
            nombreAfiliado: $("#afName").val(),
            apellidoAfiliado: $("#afApellido").val(),
            parentescoAfiliado: $("#afParentesto").val(),
        }
    }
    function AgregarNuevoAfiliado() {
        let afiliado = GetAfiliado();
        let ls = $("<li></li>");
        let span = $("<span> Nombre Afiliado :" + afiliado.nombreAfiliado + "</span></br>" +
            "<span> Apellido Afiliado :" + afiliado.apellidoAfiliado + "</span>"
        +"<span> </br>Parentesco Afiliado :"   + afiliado.parentescoAfiliado + "</span>");
        let indx = $("#listAfiliados li").length;
        ls.append(span);
        ls.append(CreateInput("ListAfiliados[" + indx + "].Nombre_Afiliado", afiliado.nombreAfiliado));
        ls.append(CreateInput("ListAfiliados[" + indx + "].Apellidos_Afiliado", afiliado.apellidoAfiliado));
        ls.append(CreateInput("ListAfiliados[" + indx + "].Id_Socio", @Model.Id_Socio));
        ls.append(CreateInput("ListAfiliados[" + indx + "].Parentesco", afiliado.parentescoAfiliado));
        $("#listAfiliados").append(ls);
    }
    function Clear() {
        $("#afName").val("");
        $("#afApellido").val("");
        $("#afParentesto").val("");
    }
    function CreateInput(name,value) {
        return $("<input type='hidden' name='" + name + "' value='" + value + "'/>");
    }
</script>
<link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
    <script>

        $(document).ready(function () {
            $('#txtdate').datepicker();
        });
         $(document).ready(function () {
            $('#txtdate2').datepicker();
         });
         $(document).ready(function () {
            $('#txtdate3').datepicker();
        });

    </script>
}